<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://code.alibabatech.com/schema/dubbo
						http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
                     http://www.springframework.org/schema/security
                     http://www.springframework.org/schema/security/spring-security.xsd">

    <!--排除都成访问的资源-->
      <!--放行a.html-->
    <!--  <security:http security="none" pattern="/pages/a.html"></security:http>-->
   <!--   &lt;!&ndash;放行b.html&ndash;&gt;
      <security:http security="none" pattern="/pages/b.html"></security:http>
      &lt;!&ndash;通配符放行&ndash;&gt;
      <security:http security="none" pattern="/pages/**"></security:http>-->
    <!--放行页面-->



    <security:http security="none" pattern="/login.html"/>
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/js/**"/>
    <security:http security="none" pattern="/plugins/**"/>
    <security:http security="none" pattern="/template/**"/>


    <!--
    http:用来定义相关权限控制
    auto_config:是否自动配置,设置true会提供一个默认登录页面
    use_expressions:用于指定intercept_url中的access是否使用表达式
    -->
    <security:http auto-config="true" use-expressions="true">
        <security:session-management >
            <!--设置最大连接数，error-if-maximum-exceeded会踢下前一个用户-->
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false" />
        </security:session-management>
        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
        <!--认证就可以访问-->
        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"/>
        <security:form-login login-page="/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             authentication-failure-url="/login.html"
                             default-target-url="/pages/main.html"
                             login-processing-url="/login.do"/>
        <!--关闭系统默认登录页面-->
        <security:csrf disabled="true"/>
        <!--退出系统是时的配置-->
        <security:logout invalidate-session="true" logout-success-url="/login.html" logout-url="/logout.do"/>
    </security:http>


    <!--配置认证管理器-->
    <security:authentication-manager>
        <!--配置认证提供者-->
        <security:authentication-provider user-service-ref="springSecurityUserService">
            <!--声明使用那个加密-->
            <security:password-encoder ref="passwordEncoder"/>
            <!--配置用户(测试)
            <security:user-service>
               noop代表明文的意思
                <security:user name="admin" authorities="ROLE_ADMIN" password="{noop}1234"/>
            </security:user-service>
            -->
        </security:authentication-provider>
    </security:authentication-manager>

    <!--把com.zps.service.SpringSecurityUserService交给spring容器-->
<!--    <bean id="userService" class="com.zps.service.SpringSecurityUserService"/>
    <bean id="userService2" class="com.zps.service.SpringSecurityUserService2"/>-->

    <!--注入加密-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <!--开启spring注解-->
   <!-- <context:annotation-config/>
    &lt;!&ndash;开启注解&ndash;&gt;
    <context:component-scan base-package="com.zps.controller"/>

    <mvc:annotation-driven/>-->
    <!--开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled"/>


</beans>