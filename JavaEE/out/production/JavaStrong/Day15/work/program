第一题:分析以下需求,并用代码实现

	1.定义一个Person类
	2.定义 姓名 和 年龄 两个成员变量,生成构造方法和对应的set get方法
	3.在该类中定义一个run()方法,打印:"我"+name+"是一个好人"
	4.在该类中定义一个show(Date date)方法,该方法执行时可以将时间转为符合我们阅读习惯的格式
		如:2019年01月08日 11:00:30

	5.在该类中定义一个copy(String fileName)方法,该方法可以接收一个文件的名称
		注意:在模块的根路径下已知有一个纯文本文档类型的文件,需要在该方法的内部
		将文件里的内容反转
		例如:
			源文件内容:
				种一颗树最好的时光是十年前
				其次好的时光就是现在

			方法执行之后文件里的内容
				其次好的时光就是现在
				种一颗树最好的时光是十年前

	6.在测试类中,通过反射的方式创建对象、获取方法、执行方法

第二题:分析以下需求,并用代码实现
	1.已知一个类，定义如下：
		package com.itheima;
		public class DemoClass {
			private void run(String name) {
				System.out.println(nam + "welcome to heima!");
			}
		}
		(1)写一个Properties格式的配置文件，配置类的完整名称、方法名称
		(2)写一个程序，读取这个Properties配置文件，获得类的完整名称并加载这个类，
		(3)用反射 的方式创建对象、获取方法、执行方法

第三题：面试题

	1.创建一个ArrayList集合对象名为 list,泛型为Integer类型,随机生成10个整数添加到集合
	将集合的元素进行排序，且遍历出每一个元素

	2.请问，有办法向对象名为 list的集合 中添加String类型的对象？
		若不能，请说明原因
		否则，请代码实现

第四题：思考题 工具类中有一个非常屌炸天的方法，可以获取任意类的任意成员变量的值
public class MyUtils{
	 private MyUtils() {
    }
	/*
		参数：
			Object obj : 代表可以接收任意类型的对象
			String fieldName ： 代表该对象成员变量的名字

		返回值类型：
			Object : 代表该方法的返回值类型

		也就是说，该方法可以获取任意对象成员变量的值
		例如在测试类调用该方法：
			Person p = new Person("马峥");
			Object c = getProperty (p, "name");	//恭喜你，这个时候你就 得到 马峥了 ，接下来 你懂的~

		要求：必须使用反射
	*/
	public static Object getProperty (Object obj, String fieldName){

	}
}



